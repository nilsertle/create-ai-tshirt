lexik_jwt_authentication:
    secret_key: "%env(resolve:JWT_SECRET_KEY)%"
    public_key: "%env(resolve:JWT_PUBLIC_KEY)%"
    pass_phrase: "%env(JWT_PASSPHRASE)%"

    token_ttl: 360000 # token TTL in seconds, defaults to 1 hour
    user_identity_field: email # key under which the user identity will be stored in the token payload
    clock_skew: 0
    allow_no_expiration: false # set to true to allow tokens without exp claim

    # token encoding/decoding settings
    encoder:
        # token encoder/decoder service - default implementation based on the lcobucci/jwt library
        service: lexik_jwt_authentication.encoder.lcobucci

        # encryption algorithm used by the encoder service
        signature_algorithm: RS256

    # token extraction settings
    token_extractors:
        # DEFAULT: look for a token as Authorization Header
        authorization_header:
            enabled: true
            prefix: Bearer
            name: Authorization

        # CHANGED: check token in a cookie
        cookie:
            enabled: true
            name: BEARER

        # DEFAULT: check token in query string parameter
        query_parameter:
            enabled: false
            name: bearer

        # DEFAULT: check token in a cookie
        split_cookie:
            enabled: false
            cookies:
                - jwt_hp
                - jwt_s
    set_cookies:
        BEARER: ~

    # remove the token from the response body when using cookies
    remove_token_from_body_when_cookies_used: true
